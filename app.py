# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S2QIj-Bf2kGwpkQAUXsB2auacyxkj2gW
"""

from flask import Flask, request, jsonify, render_template
from transformers import BertForSequenceClassification, BertTokenizer
import torch

# Initialize the Flask app
app = Flask(__name__)

# Load the saved model and tokenizer
model = BertForSequenceClassification.from_pretrained("./saved_model")
tokenizer = BertTokenizer.from_pretrained("./saved_model")

# Prediction function
def predict_sentiment(text):
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True, max_length=128)
    model.eval()
    with torch.no_grad():
        outputs = model(**inputs)
        logits = outputs.logits
    predicted_class = torch.argmax(logits, dim=1).item()
    label_dict = {0: 'Positive', 1: 'Negative', 2: 'Neutral'}
    return label_dict[predicted_class]

# Define route for UI and prediction
@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    data = request.form['text']
    prediction = predict_sentiment(data)
    return jsonify({"prediction": prediction})

if __name__ == '__main__':
    app.run(debug=True)